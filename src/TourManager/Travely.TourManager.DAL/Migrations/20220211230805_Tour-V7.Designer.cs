// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Travely.TourManager.DAL;

namespace Travely.TourManager.DAL.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220211230805_Tour-V7")]
    partial class TourV7
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Travely.TourManager.DAL.Attachment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("AttachmentName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("AttachmentName");

                    b.Property<int>("GroupId")
                        .HasColumnType("int")
                        .HasColumnName("GroupId");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("Attachment");
                });

            modelBuilder.Entity("Travely.TourManager.DAL.Group", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Country");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<int>("NumberOfChildren")
                        .HasColumnType("int")
                        .HasColumnName("NumberOfChildren");

                    b.Property<int>("NumberOfParticipants")
                        .HasColumnType("int")
                        .HasColumnName("NumberOfParticipants");

                    b.Property<string>("Preferences")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Preferences");

                    b.HasKey("Id");

                    b.ToTable("Group");
                });

            modelBuilder.Entity("Travely.TourManager.DAL.GroupLanguage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GroupId")
                        .HasColumnType("int")
                        .HasColumnName("GroupId");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int")
                        .HasColumnName("LanguageId");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("LanguageId");

                    b.ToTable("GroupLanguages");
                });

            modelBuilder.Entity("Travely.TourManager.DAL.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LanguageName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("LanguageName");

                    b.HasKey("Id");

                    b.ToTable("Language");
                });

            modelBuilder.Entity("Travely.TourManager.DAL.Tour", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ArrivalDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ArrivalDate");

                    b.Property<string>("ArrivalFlightNumber")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ArrivalFlightNumber");

                    b.Property<string>("ArrivalLocation")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ArrivalLocation");

                    b.Property<TimeSpan?>("ArrivalTime")
                        .HasColumnType("time")
                        .HasColumnName("ArrivalTime");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Cost");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedAt");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime?>("DepartureDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DepartureDate");

                    b.Property<string>("DepartureFlightNumber")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DepartureFlightNumber");

                    b.Property<string>("DepartureLocation")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DepartureLocation");

                    b.Property<TimeSpan?>("DepartureTime")
                        .HasColumnType("time")
                        .HasColumnName("DepartureTime");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("EndDate");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastEditedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastEditedAt");

                    b.Property<string>("LastEditedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("LastEditedBy");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Notes");

                    b.Property<string>("PartnerName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PartnerName");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("StartDate");

                    b.Property<string>("TourName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TourName");

                    b.Property<int>("TourStatusId")
                        .HasColumnType("int")
                        .HasColumnName("TourStatusId");

                    b.Property<int>("TourTypeId")
                        .HasColumnType("int")
                        .HasColumnName("TourTypeId");

                    b.HasKey("Id");

                    b.HasIndex("TourStatusId");

                    b.HasIndex("TourTypeId");

                    b.ToTable("Tour");
                });

            modelBuilder.Entity("Travely.TourManager.DAL.TourStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("StatusName");

                    b.HasKey("Id");

                    b.ToTable("TourStatus");
                });

            modelBuilder.Entity("Travely.TourManager.DAL.TourType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TypeName");

                    b.HasKey("Id");

                    b.ToTable("TourType");
                });

            modelBuilder.Entity("Travely.TourManager.DAL.Attachment", b =>
                {
                    b.HasOne("Travely.TourManager.DAL.Group", "GroupAttachment")
                        .WithMany("Attachments")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GroupAttachment");
                });

            modelBuilder.Entity("Travely.TourManager.DAL.Group", b =>
                {
                    b.HasOne("Travely.TourManager.DAL.Tour", "Tour")
                        .WithOne("TourGroup")
                        .HasForeignKey("Travely.TourManager.DAL.Group", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tour");
                });

            modelBuilder.Entity("Travely.TourManager.DAL.GroupLanguage", b =>
                {
                    b.HasOne("Travely.TourManager.DAL.Group", "Group")
                        .WithMany("GroupLanguages")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Travely.TourManager.DAL.Language", "Language")
                        .WithMany("GroupLanguages")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("Travely.TourManager.DAL.Tour", b =>
                {
                    b.HasOne("Travely.TourManager.DAL.TourStatus", "TourStatus")
                        .WithMany("Tours")
                        .HasForeignKey("TourStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Travely.TourManager.DAL.TourType", "TourType")
                        .WithMany("Tours")
                        .HasForeignKey("TourTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TourStatus");

                    b.Navigation("TourType");
                });

            modelBuilder.Entity("Travely.TourManager.DAL.Group", b =>
                {
                    b.Navigation("Attachments");

                    b.Navigation("GroupLanguages");
                });

            modelBuilder.Entity("Travely.TourManager.DAL.Language", b =>
                {
                    b.Navigation("GroupLanguages");
                });

            modelBuilder.Entity("Travely.TourManager.DAL.Tour", b =>
                {
                    b.Navigation("TourGroup");
                });

            modelBuilder.Entity("Travely.TourManager.DAL.TourStatus", b =>
                {
                    b.Navigation("Tours");
                });

            modelBuilder.Entity("Travely.TourManager.DAL.TourType", b =>
                {
                    b.Navigation("Tours");
                });
#pragma warning restore 612, 618
        }
    }
}
