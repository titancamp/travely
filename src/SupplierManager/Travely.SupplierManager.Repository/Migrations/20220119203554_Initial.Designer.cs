// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Travely.SupplierManager.Repository.DbContexts;

namespace Travely.SupplierManager.Repository.Migrations
{
    [DbContext(typeof(SupplierDbContext))]
    [Migration("20220119203554_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Travely.SupplierManager.Repository.Entities.AccommodationEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("AgencyId")
                        .HasColumnType("int");

                    b.Property<bool>("AllInclusive")
                        .HasColumnType("bit");

                    b.Property<TimeSpan>("CheckInTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("CheckOutTime")
                        .HasColumnType("time");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ContactEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPerson")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(20,2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastEditedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastEditedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("SignDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TmRegion")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("AccommodationEntity");
                });

            modelBuilder.Entity("Travely.SupplierManager.Repository.Entities.AccommodationServiceEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccommodationId")
                        .HasColumnType("int");

                    b.Property<int>("Service")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccommodationId");

                    b.ToTable("AccommodationServiceEntity");
                });

            modelBuilder.Entity("Travely.SupplierManager.Repository.Entities.ActivitiesEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AgencyId")
                        .HasColumnType("int");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(20,2)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("SignDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TypeName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("ActivitiesEntity");
                });

            modelBuilder.Entity("Travely.SupplierManager.Repository.Entities.AttachmentEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("AccommodationEntityId")
                        .HasColumnType("int");

                    b.Property<int?>("ActivitiesEntityId")
                        .HasColumnType("int");

                    b.Property<int?>("FoodEntityId")
                        .HasColumnType("int");

                    b.Property<int?>("GuidesEntityId")
                        .HasColumnType("int");

                    b.Property<int?>("MenuEntityId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("TransportationEntityId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccommodationEntityId");

                    b.HasIndex("ActivitiesEntityId");

                    b.HasIndex("FoodEntityId");

                    b.HasIndex("GuidesEntityId");

                    b.HasIndex("MenuEntityId");

                    b.HasIndex("TransportationEntityId");

                    b.ToTable("AttachmentEntity");
                });

            modelBuilder.Entity("Travely.SupplierManager.Repository.Entities.AttributeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ActivitiesEntityId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("ActivitiesEntityId");

                    b.ToTable("AttributeEntity");
                });

            modelBuilder.Entity("Travely.SupplierManager.Repository.Entities.CarEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Color")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Model")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("NumberOfCarSeats")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfSeats")
                        .HasColumnType("int");

                    b.Property<string>("PlateNumber")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int?>("TransportationEntityId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TransportationEntityId");

                    b.ToTable("CarEntity");
                });

            modelBuilder.Entity("Travely.SupplierManager.Repository.Entities.DriverEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContactNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("TransportationEntityId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TransportationEntityId");

                    b.ToTable("DriverEntity");
                });

            modelBuilder.Entity("Travely.SupplierManager.Repository.Entities.FoodEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("AgencyId")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<TimeSpan>("ClosingHoursW")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("ClosingHoursWd")
                        .HasColumnType("time");

                    b.Property<string>("ContactEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPerson")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(20,2)");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LocationId")
                        .HasColumnType("int");

                    b.Property<int?>("MenuId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<TimeSpan>("OpeningHoursW")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("OpeningHoursWd")
                        .HasColumnType("time");

                    b.Property<DateTime>("SignDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TmRegion")
                        .HasColumnType("int");

                    b.Property<int?>("TypeId")
                        .HasColumnType("int");

                    b.Property<bool>("Weekends")
                        .HasColumnType("bit");

                    b.Property<bool>("WorkingDays")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.HasIndex("MenuId");

                    b.HasIndex("TypeId");

                    b.ToTable("FoodEntity");
                });

            modelBuilder.Entity("Travely.SupplierManager.Repository.Entities.FoodTypeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FoodTypeEntity");
                });

            modelBuilder.Entity("Travely.SupplierManager.Repository.Entities.GuideEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContactEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GuidesEntityId")
                        .HasColumnType("int");

                    b.Property<Guid?>("ImageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("GuidesEntityId");

                    b.HasIndex("ImageId");

                    b.ToTable("GuideEntity");
                });

            modelBuilder.Entity("Travely.SupplierManager.Repository.Entities.GuidesEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("AgencyId")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ContactEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPerson")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(20,2)");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("SignDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TmRegion")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("GuidesEntity");
                });

            modelBuilder.Entity("Travely.SupplierManager.Repository.Entities.LanguageEntity<Travely.SupplierManager.Repository.Entities.DriverEntity>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("LanguageEntity<DriverEntity>");
                });

            modelBuilder.Entity("Travely.SupplierManager.Repository.Entities.LanguageEntity<Travely.SupplierManager.Repository.Entities.GuideEntity>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("LanguageEntity<GuideEntity>");
                });

            modelBuilder.Entity("Travely.SupplierManager.Repository.Entities.LicenseTypeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DriverId")
                        .HasColumnType("int");

                    b.Property<int>("LicenseType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DriverId");

                    b.ToTable("LicenseTypeEntity");
                });

            modelBuilder.Entity("Travely.SupplierManager.Repository.Entities.LocationEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Latitude")
                        .HasColumnType("real");

                    b.Property<float>("Longitude")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("LocationEntity");
                });

            modelBuilder.Entity("Travely.SupplierManager.Repository.Entities.MenuEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("MenuEntity");
                });

            modelBuilder.Entity("Travely.SupplierManager.Repository.Entities.RoomEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccommodationEntityId")
                        .HasColumnType("int");

                    b.Property<int>("AdditionalBeds")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfBeds")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(20,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccommodationEntityId");

                    b.ToTable("RoomEntity");
                });

            modelBuilder.Entity("Travely.SupplierManager.Repository.Entities.RoomServiceEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("RoomEntityId")
                        .HasColumnType("int");

                    b.Property<int>("Service")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoomEntityId");

                    b.ToTable("RoomServiceEntity");
                });

            modelBuilder.Entity("Travely.SupplierManager.Repository.Entities.TagEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("MenuEntityId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("MenuEntityId");

                    b.ToTable("TagEntity");
                });

            modelBuilder.Entity("Travely.SupplierManager.Repository.Entities.TransportationEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("AgencyId")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ContactEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPerson")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastEditedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastEditedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("SignDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TmRegion")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("TransportationEntity");
                });

            modelBuilder.Entity("Travely.SupplierManager.Repository.Entities.AccommodationEntity", b =>
                {
                    b.HasOne("Travely.SupplierManager.Repository.Entities.LocationEntity", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("Travely.SupplierManager.Repository.Entities.AccommodationServiceEntity", b =>
                {
                    b.HasOne("Travely.SupplierManager.Repository.Entities.AccommodationEntity", "Accommodation")
                        .WithMany("Services")
                        .HasForeignKey("AccommodationId");

                    b.Navigation("Accommodation");
                });

            modelBuilder.Entity("Travely.SupplierManager.Repository.Entities.AttachmentEntity", b =>
                {
                    b.HasOne("Travely.SupplierManager.Repository.Entities.AccommodationEntity", null)
                        .WithMany("Attachments")
                        .HasForeignKey("AccommodationEntityId");

                    b.HasOne("Travely.SupplierManager.Repository.Entities.ActivitiesEntity", null)
                        .WithMany("Attachments")
                        .HasForeignKey("ActivitiesEntityId");

                    b.HasOne("Travely.SupplierManager.Repository.Entities.FoodEntity", null)
                        .WithMany("Attachments")
                        .HasForeignKey("FoodEntityId");

                    b.HasOne("Travely.SupplierManager.Repository.Entities.GuidesEntity", null)
                        .WithMany("Attachments")
                        .HasForeignKey("GuidesEntityId");

                    b.HasOne("Travely.SupplierManager.Repository.Entities.MenuEntity", null)
                        .WithMany("Attachments")
                        .HasForeignKey("MenuEntityId");

                    b.HasOne("Travely.SupplierManager.Repository.Entities.TransportationEntity", null)
                        .WithMany("Attachments")
                        .HasForeignKey("TransportationEntityId");
                });

            modelBuilder.Entity("Travely.SupplierManager.Repository.Entities.AttributeEntity", b =>
                {
                    b.HasOne("Travely.SupplierManager.Repository.Entities.ActivitiesEntity", null)
                        .WithMany("Attributes")
                        .HasForeignKey("ActivitiesEntityId");
                });

            modelBuilder.Entity("Travely.SupplierManager.Repository.Entities.CarEntity", b =>
                {
                    b.HasOne("Travely.SupplierManager.Repository.Entities.TransportationEntity", null)
                        .WithMany("Cars")
                        .HasForeignKey("TransportationEntityId");
                });

            modelBuilder.Entity("Travely.SupplierManager.Repository.Entities.DriverEntity", b =>
                {
                    b.HasOne("Travely.SupplierManager.Repository.Entities.TransportationEntity", null)
                        .WithMany("Drivers")
                        .HasForeignKey("TransportationEntityId");
                });

            modelBuilder.Entity("Travely.SupplierManager.Repository.Entities.FoodEntity", b =>
                {
                    b.HasOne("Travely.SupplierManager.Repository.Entities.LocationEntity", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId");

                    b.HasOne("Travely.SupplierManager.Repository.Entities.MenuEntity", "Menu")
                        .WithMany()
                        .HasForeignKey("MenuId");

                    b.HasOne("Travely.SupplierManager.Repository.Entities.FoodTypeEntity", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId");

                    b.Navigation("Location");

                    b.Navigation("Menu");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("Travely.SupplierManager.Repository.Entities.GuideEntity", b =>
                {
                    b.HasOne("Travely.SupplierManager.Repository.Entities.GuidesEntity", null)
                        .WithMany("Guide")
                        .HasForeignKey("GuidesEntityId");

                    b.HasOne("Travely.SupplierManager.Repository.Entities.AttachmentEntity", "Image")
                        .WithMany()
                        .HasForeignKey("ImageId");

                    b.Navigation("Image");
                });

            modelBuilder.Entity("Travely.SupplierManager.Repository.Entities.GuidesEntity", b =>
                {
                    b.HasOne("Travely.SupplierManager.Repository.Entities.LocationEntity", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("Travely.SupplierManager.Repository.Entities.LanguageEntity<Travely.SupplierManager.Repository.Entities.DriverEntity>", b =>
                {
                    b.HasOne("Travely.SupplierManager.Repository.Entities.DriverEntity", "User")
                        .WithMany("Languages")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Travely.SupplierManager.Repository.Entities.LanguageEntity<Travely.SupplierManager.Repository.Entities.GuideEntity>", b =>
                {
                    b.HasOne("Travely.SupplierManager.Repository.Entities.GuideEntity", "User")
                        .WithMany("Languages")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Travely.SupplierManager.Repository.Entities.LicenseTypeEntity", b =>
                {
                    b.HasOne("Travely.SupplierManager.Repository.Entities.DriverEntity", "Driver")
                        .WithMany("LicenseType")
                        .HasForeignKey("DriverId");

                    b.Navigation("Driver");
                });

            modelBuilder.Entity("Travely.SupplierManager.Repository.Entities.RoomEntity", b =>
                {
                    b.HasOne("Travely.SupplierManager.Repository.Entities.AccommodationEntity", "AccommodationEntity")
                        .WithMany("Rooms")
                        .HasForeignKey("AccommodationEntityId");

                    b.Navigation("AccommodationEntity");
                });

            modelBuilder.Entity("Travely.SupplierManager.Repository.Entities.RoomServiceEntity", b =>
                {
                    b.HasOne("Travely.SupplierManager.Repository.Entities.RoomEntity", "RoomEntity")
                        .WithMany("Services")
                        .HasForeignKey("RoomEntityId");

                    b.Navigation("RoomEntity");
                });

            modelBuilder.Entity("Travely.SupplierManager.Repository.Entities.TagEntity", b =>
                {
                    b.HasOne("Travely.SupplierManager.Repository.Entities.MenuEntity", null)
                        .WithMany("Tags")
                        .HasForeignKey("MenuEntityId");
                });

            modelBuilder.Entity("Travely.SupplierManager.Repository.Entities.TransportationEntity", b =>
                {
                    b.HasOne("Travely.SupplierManager.Repository.Entities.LocationEntity", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("Travely.SupplierManager.Repository.Entities.AccommodationEntity", b =>
                {
                    b.Navigation("Attachments");

                    b.Navigation("Rooms");

                    b.Navigation("Services");
                });

            modelBuilder.Entity("Travely.SupplierManager.Repository.Entities.ActivitiesEntity", b =>
                {
                    b.Navigation("Attachments");

                    b.Navigation("Attributes");
                });

            modelBuilder.Entity("Travely.SupplierManager.Repository.Entities.DriverEntity", b =>
                {
                    b.Navigation("Languages");

                    b.Navigation("LicenseType");
                });

            modelBuilder.Entity("Travely.SupplierManager.Repository.Entities.FoodEntity", b =>
                {
                    b.Navigation("Attachments");
                });

            modelBuilder.Entity("Travely.SupplierManager.Repository.Entities.GuideEntity", b =>
                {
                    b.Navigation("Languages");
                });

            modelBuilder.Entity("Travely.SupplierManager.Repository.Entities.GuidesEntity", b =>
                {
                    b.Navigation("Attachments");

                    b.Navigation("Guide");
                });

            modelBuilder.Entity("Travely.SupplierManager.Repository.Entities.MenuEntity", b =>
                {
                    b.Navigation("Attachments");

                    b.Navigation("Tags");
                });

            modelBuilder.Entity("Travely.SupplierManager.Repository.Entities.RoomEntity", b =>
                {
                    b.Navigation("Services");
                });

            modelBuilder.Entity("Travely.SupplierManager.Repository.Entities.TransportationEntity", b =>
                {
                    b.Navigation("Attachments");

                    b.Navigation("Cars");

                    b.Navigation("Drivers");
                });
#pragma warning restore 612, 618
        }
    }
}
